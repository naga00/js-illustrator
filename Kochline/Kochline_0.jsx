//@include "tn/system/VersionCheck.jsx";//@include "tn/system/System.jsx";//@include "tn/system/Capabilities.jsx";//@include "tn/document/DocumentColorSpaceEx.jsx";//@include "tn/document/DocumentPresetEx.jsx";//@include "tn/document/DocumentEx.jsx";//@include "tn/color/ColorEx.jsx";//@include "tn/geom/Point.jsx";//@include "tn/geom/PVector.jsx";//@include "tn/geom/KochLine.jsx";//@include "tn/path/GuideItems.jsx";//@include "tn/path/BackgroundItems.jsx";//@include "tn/path/PathItemsEx.jsx";//@include "tn/io/FileStream.jsx";//@include "tn/io/SaveOptions.jsx";//@include "tn/io/ExportOptions.jsx";/*DocumentRasterResolution.ScreenResolutionDocumentRasterResolution.MediumResolutionDocumentRasterResolusion.HighResokutionDocumentPreviewMode.DefaultPreviewDocumentPreviewMode.PixelPreviewDocumentPreviewMode.OverprintPreview*/	var documentPresetEx = new DocumentPresetEx("Sample", 700, 700, DocumentColorSpace.RGB, DocumentRasterResolution.ScreenResolution, DocumentPreviewMode.DefaultPreview);var documentEx = new DocumentEx(true, documentPresetEx);documentEx.defaultStroked = true;documentEx.defaultFilled = true;documentEx.defaultStrokeOverprint = false;documentEx.defaultFillOverprint = false;documentEx.defaultStrokeCap = StrokeCap.BUTTENDCAP; ///BUTTENDCAP, ROUNDENDCAP, PROJECTINGENDCAPdocumentEx.defaultStrokeJoin = StrokeJoin.MITERENDJOIN; ///BEVELENDJOIN, MITERENDJOIN, ROUNDENDJOIN documentEx.defaultStrokeMiterLimit = 4;  ///default:4documentEx.defaultStrokeWidth = 1;documentEx.views[0].zoom = 1;documentEx.layers[0].name = "background";var backgroundItems = new BackgroundItems(new RGBColorEx(255, 255, 255), activeDocument.width, activeDocument.height);documentEx.layers[0].locked = true;documentEx.addLayer("layer1");var pathItemsEx = new PathItemsEx();pathItemsEx.setDefaultStroked(true);pathItemsEx.setDefaultFilled(false);var color = new RGBColorEx(0, 0, 0);pathItemsEx.setDefaultFillColor(color);pathItemsEx.setDefaultStrokeColor(color);pathItemsEx.setDefaultStrokeWidth(1);var size = 700;var depth = 7;var lines = new Array();var start = new PVector(0, 150);var end = new PVector(size, 150);lines.push(new KochLine(start, end));for (var i = 0; i < depth; i++) {  generate();}function draw() {  for(var i=0; i<lines.length; i++){    var l = lines[i];    pathItemsEx.moveTo(l.start.x, l.start.y);    pathItemsEx.lineTo(l.end.x, l.end.y);  }  pathItemsEx.setStrokeColor(new RGBColorEx(0, 0, 0));}function generate() {  var next = new Array();    // Create emtpy list    for(var i=0; i<lines.length; i++){    var l = lines[i];    var a = l.kochA();                     var b = l.kochB();    var c = l.kochC();    var d = l.kochD();    var e = l.kochE();    next.push(new KochLine(a, b));    next.push(new KochLine(b, c));    next.push(new KochLine(c, d));    next.push(new KochLine(d, e));  }  lines = next;}draw();