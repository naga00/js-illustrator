//@include "tn/system/VersionCheck.jsx";//@include "tn/system/System.jsx";//@include "tn/system/Capabilities.jsx";//@include "tn/document/DocumentColorSpaceEx.jsx";//@include "tn/document/DocumentPresetEx.jsx";//@include "tn/document/DocumentEx.jsx";//@include "tn/color/ColorEx.jsx";//@include "tn/geom/Point.jsx";//@include "tn/geom/PVector.jsx";//@include "tn/path/GuideItems.jsx";//@include "tn/path/BackgroundItems.jsx";//@include "tn/path/PathItemsEx.jsx";//@include "tn/io/FileStream.jsx";//@include "tn/io/SaveOptions.jsx";//@include "tn/io/ExportOptions.jsx";/*DocumentRasterResolution.ScreenResolutionDocumentRasterResolution.MediumResolutionDocumentRasterResolusion.HighResokutionDocumentPreviewMode.DefaultPreviewDocumentPreviewMode.PixelPreviewDocumentPreviewMode.OverprintPreview*/	var documentPresetEx = new DocumentPresetEx("Sample", 600, 600, DocumentColorSpace.RGB, DocumentRasterResolution.HighResolution, DocumentPreviewMode.OverprintPreview);var documentEx = new DocumentEx(true, documentPresetEx);documentEx.defaultStroked = true;documentEx.defaultFilled = true;documentEx.defaultStrokeOverprint = false;documentEx.defaultFillOverprint = false;documentEx.defaultStrokeCap = StrokeCap.BUTTENDCAP; ///BUTTENDCAP, ROUNDENDCAP, PROJECTINGENDCAPdocumentEx.defaultStrokeJoin = StrokeJoin.MITERENDJOIN; ///BEVELENDJOIN, MITERENDJOIN, ROUNDENDJOIN documentEx.defaultStrokeMiterLimit = 4;  ///default:4documentEx.defaultStrokeWidth = 1;documentEx.views[0].zoom = 1;documentEx.layers[0].name = "background";var backgroundItems = new BackgroundItems(new RGBColorEx(255, 255, 255), activeDocument.width, activeDocument.height);documentEx.layers[0].locked = true;documentEx.addLayer("layer1");var pathItemsEx = new PathItemsEx();pathItemsEx.setDefaultStroked(false);pathItemsEx.setDefaultFilled(true);var color = new RGBColorEx(0, 0, 0);pathItemsEx.setDefaultFillColor(color);//pathItemsEx.setDefaultStrokeColor(color);//pathItemsEx.setDefaultStrokeWidth(0.1);var margin = 0;var h = Math.sqrt(documentPresetEx.width*documentPresetEx.width - (documentPresetEx.width/2)*(documentPresetEx.width/2));var depth = 9;var isBackground = true;function draw(){  var left = new PVector(margin, margin);  var top = new PVector(documentPresetEx.width/2, h-margin);  var right = new PVector(documentPresetEx.width-margin, margin);   if(isBackground){    pathItemsEx.drawTriangle(left.x, left.y, top.x, top.y, right.x, right.y);    pathItemsEx.setFillColor(new RGBColorEx(255, 255, 255));  }  drawTris(0, depth, left, top, right);  depth++;}function drawTris(level, maxLevels, left, top, right){  level++;    if(level >= maxLevels) {        pathItemsEx.drawTriangleEx(left.x, left.y, top.x, top.y, right.x, right.y, left.x, left.y);    //pathItemsEx.drawTriangle(Math.floor(left.x), Math.floor(left.y), Math.floor(top.x), Math.floor(top.y), Math.floor(right.x), Math.floor(right.y));    pathItemsEx.setFillColor(color);   } else {    var a = PVector.add(left, PVector.div(PVector.sub(top, left), 2));    var b = PVector.add(right, PVector.div(PVector.sub(top, right), 2));    var c = PVector.add(left, PVector.div(PVector.sub(right, left), 2));    drawTris(level, maxLevels, a, top, b);    drawTris(level, maxLevels, left, a, c);    drawTris(level, maxLevels, c, b, right);  }}draw();