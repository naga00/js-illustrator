//@include "tn/system/VersionCheck.jsx";//@include "tn/system/System.jsx";//@include "tn/system/Capabilities.jsx";//@include "tn/document/DocumentColorSpaceEx.jsx";//@include "tn/document/DocumentPresetEx.jsx";//@include "tn/document/DocumentEx.jsx";//@include "tn/color/ColorEx.jsx";//@include "tn/geom/Point.jsx";//@include "tn/geom/PVector.jsx";//@include "tn/geom/KochLine.jsx";//@include "tn/path/GuideItems.jsx";//@include "tn/path/BackgroundItems.jsx";//@include "tn/path/PathItemsEx.jsx";//@include "tn/io/FileStream.jsx";//@include "tn/io/SaveOptions.jsx";//@include "tn/io/ExportOptions.jsx";/*DocumentRasterResolution.ScreenResolutionDocumentRasterResolution.MediumResolutionDocumentRasterResolusion.HighResokutionDocumentPreviewMode.DefaultPreviewDocumentPreviewMode.PixelPreviewDocumentPreviewMode.OverprintPreview*/	var documentPresetEx = new DocumentPresetEx("Sample", 700, 700, DocumentColorSpace.RGB, DocumentRasterResolution.ScreenResolution, DocumentPreviewMode.DefaultPreview);var documentEx = new DocumentEx(true, documentPresetEx);documentEx.defaultStroked = true;documentEx.defaultFilled = true;documentEx.defaultStrokeOverprint = false;documentEx.defaultFillOverprint = false;documentEx.defaultStrokeCap = StrokeCap.BUTTENDCAP; ///BUTTENDCAP, ROUNDENDCAP, PROJECTINGENDCAPdocumentEx.defaultStrokeJoin = StrokeJoin.MITERENDJOIN; ///BEVELENDJOIN, MITERENDJOIN, ROUNDENDJOIN documentEx.defaultStrokeMiterLimit = 4;  ///default:4documentEx.defaultStrokeWidth = 1;documentEx.views[0].zoom = 1;documentEx.layers[0].name = "background";var backgroundItems = new BackgroundItems(new RGBColorEx(255, 255, 255), activeDocument.width, activeDocument.height);documentEx.layers[0].locked = true;documentEx.addLayer("layer1");var pathItemsEx = new PathItemsEx();pathItemsEx.setDefaultStroked(true);pathItemsEx.setDefaultFilled(false);var color = new RGBColorEx(0, 0, 0);pathItemsEx.setDefaultFillColor(color);pathItemsEx.setDefaultStrokeColor(color);pathItemsEx.setDefaultStrokeWidth(1);cantorSnowflake(0, height/2, 140, 280);function cantorSnowflake(var x, var y, var length, var sideStep) {  if (length < 0.1) return;     //pushMatrix();     hexagon(x, y, length);     //translate(sideStep, 0);     for (int i = 0; i < 6; i++) {    PVector point = vector(i * THIRD_PI, length * 2 / 3);    cantorSnowflake(point.x, point.y, length / 3, sideStep);  }     //popMatrix();} function hexagon(float centerX, float centerY, float length) {  translate(centerX, centerY);     beginShape();  for (int i = 0; i < 6; i++) {    hexPoint(vector(i * THIRD_PI, length));  }  endShape(CLOSE);} function hexPoint(PVector v) {  vertex(v.x, v.y);}